<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	<description>Shiro 配置</description>
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />
	<bean id="ShiroSessionListener" class="com.kdgcsoft.power.common.listeners.ShiroSessionListener"></bean>
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="kdgc.session.id" />
	</bean>

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionListeners" ref="ShiroSessionListener" />
		<property name="sessionValidationInterval" value="1800000" />  <!-- 相隔多久检查一次session的有效性 -->
		<property name="globalSessionTimeout" value="1800000" />  <!-- session 有效时间为半小时 （毫秒单位） -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
		<property name="sessionIdCookieEnabled" value="true" />
	</bean>
	<!-- 如果要实现cas的remember me的功能，需要用到下面这个bean，并设置到securityManager的subjectFactory中 -->
	<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />
	<!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明  -->
	<bean id="ShiroCasRealm" class="com.kdgcsoft.power.service.fw.base.ShiroCasRealm">		
		<property name="casServerUrlPrefix" value="${casServerUrlPrefix}"/>
		<property name="casService" value="${casClientService}/system/login.action"/>
		<property name="authorizationCacheName" value="shiro.authorizationCache" />
	</bean>
	<!-- 本地登录认证的Realm -->
	<bean id="localShiroDbRealm" class="com.kdgcsoft.power.service.fw.base.ShiroDbRealm">
		<property name="authorizationCacheName" value="shiro.authorizationCache" />
	</bean>
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionManager" ref="sessionManager" />
		<property name="realms" >
			 <list>
			 <ref bean="localShiroDbRealm"/>  
             <ref bean="ShiroCasRealm"/>  
                   
            </list>  
		</property>
		<property name="subjectFactory" ref="casSubjectFactory" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />	
		<property name="unauthorizedUrl" value="/system/login.action" /><!-- 认证失败地址 -->
		<property name="filters">
			<util:map>
				<!-- 添加casFilter到shiroFilter -->
				<entry key="casFilter" value-ref="casFilter" />
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="userauthc" value-ref="userformAuthenticationFilter" />
				<!-- 注销Filter -->
				<entry key="logout" value-ref="logoutFilter"/>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/system/login.action = casFilter
				/logout.action = logout
				/static/** = anon
				/jobhttp/** =anon
				/interact/** =anon
				/comcont/** =anon
				/vinCode/** =anon
				/CarSysNation/** =anon
				/CarStyle/** =anon
				/ngk/** =anon
				/ngk/** =anon
				/system/casLogin.action = authc
				/system/userLogin.action = userauthc
				/= anon	
			</value>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>    

   <!-- 配置为基于表单认证的过滤器 -->
	<bean id="formAuthenticationFilter"	class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter" >
	<property name="loginUrl" value="${casServerUrlPrefix}?service=${casClientService}/system/login.action" /> <!-- 登录 CAS服务端地址,服务端的返回地址  --> 
	<property name="successUrl" value="/system/casLogin.action" /><!-- 为登录成功地址 -->
	</bean>
	
	<!-- 配置为本地基于表单认证的过滤器 -->
	<bean id="userformAuthenticationFilter"	class="com.kdgcsoft.power.common.security.shiro.FwFormAuthenticationFilter" >
		<property name="loginUrl" value="/system/userLogin.action" /> <!-- 登录 CAS服务端地址,服务端的返回地址  --> 
		<property name="successUrl" value="/system/userSuccessLogin.action" /><!-- 为登录成功地址 -->
	</bean>

	<!-- CAS Filter 校验失败跳转的页面 -->
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
		<property name="failureUrl" value="${casClientService}/system/login.action" />
	</bean>
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/"/>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>