<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

	<description>Spring DAO 配置 </description>
	
	<!-- 对任何带有@Repository 注解的对象自动激活其数据访问异常转换 ??-->
    <bean id="persistenceManager" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
    	<property name="proxyTargetClass" value="true" />
    </bean>
	
	
    
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	    <!-- 数据源 -->
	    <property name="dataSource" ref="dataSource" />
	    <!-- 扫描实体类 -->  
		<property name="packagesToScan" value="com.**.entity,workflow.usiflow.webframe.web.model" />
		<!-- 选配属性 -->  
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">				
<!-- 				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />		 -->
					<property name="databasePlatform" value="com.kdgcsoft.power.common.util.OracleDialect" />		
			</bean>
		</property>
		
		<property name="jpaProperties">
			<props>
				<!--  <prop key="hibernate.dialect">${hibernate.dialect}</prop> -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.show_sql">${hibernate.showsql}</prop>
                <prop key="hibernate.format_sql">false</prop>				
				<prop key="hibernate.connection.isolation">2</prop>
				<prop key="javax.persistence.validation.mode">none</prop>			
			</props>
		</property>
	</bean>	
	
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- Spring Data Jpa配置 -->
 	<jpa:repositories base-package="com.**.dao"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory" />	
 	
 	
 	
 	
 	
 	<!-- 事务模板 -->
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
 		<property name="transactionManager" ref="transactionManager" />
 	</bean>
 	
	<!-- 定义jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<!-- 可命名参数的jdbcTemplate -->
	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>
	
	<!-- Flyway 配置 -->
	<bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
		<!-- 设定flyway基线 -->
		<property name="baselineOnMigrate" value="true" />
		<!-- 一般用于开发环境，用来清理发现错误执行结果时的所有数据库版本信息 -->
		<!-- <property name="cleanOnValidationError" value="true"></property> -->
		<!-- flyway扫描sql文件的路径，默认扫描classpath:db/migration -->
		<!-- <property name="locations" value="classpath:db/migration" /> -->
		<property name="dataSource" ref="dataSource" />
	</bean>
		
	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
 	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="java.lang.System" />
		<property name="targetMethod" value="setProperty" />
		<property name="arguments">
			<list>
				<value>system.project_name</value>
				<value>HRZY</value>
			</list>
		</property>
	</bean>
	<!--beesql production环境 -->
	<beans profile="production">
	<bean id="sqlManager" class="org.beetl.sql.ext.spring4.SqlManagerFactoryBean">
        <property name="sqlLoader">
            <bean class="org.beetl.sql.core.ClasspathLoader">
            <!--md文件的路径 -->
                <property name="sqlRoot" value="/beetlsql"></property>
            </bean>
        </property>
        <property name="nc">
            <bean class="org.beetl.sql.core.UnderlinedNameConversion"></bean>
        </property>
        <property name="cs">
            <bean class="org.beetl.sql.ext.spring4.BeetlSqlDataSource">
                <property name="masterSource" ref="dataSource"></property>
            </bean>
        </property>
        <property name="dbStyle">
            <bean class="org.beetl.sql.core.db.OracleStyle"></bean>
        </property>
        <property name="configLocation" value="classpath:beetlsql-production.properties"></property>
    </bean>
    </beans>
    <!-- beesql development环境 -->
    <beans profile="development">
	<bean id="sqlManager" class="org.beetl.sql.ext.spring4.SqlManagerFactoryBean">
        <property name="sqlLoader">
            <bean class="org.beetl.sql.core.ClasspathLoader">
            <!--md文件的路径 -->
                <property name="sqlRoot" value="/beetlsql"></property>
            </bean>
        </property>
        <property name="nc">
            <bean class="org.beetl.sql.core.UnderlinedNameConversion"></bean>
        </property>
        <property name="interceptors">
            <list>
                <bean class="org.beetl.sql.ext.DebugInterceptor"></bean>
            </list>
        </property>
        <property name="cs">
            <bean class="org.beetl.sql.ext.spring4.BeetlSqlDataSource">
                <property name="masterSource" ref="dataSource"></property>
            </bean>
        </property>
        <property name="dbStyle">
            <bean class="org.beetl.sql.core.db.OracleStyle"></bean>
        </property>
        <property name="configLocation" value="classpath:beetlsql-development.properties"></property>
    </bean>
    </beans>
<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-resource-not-found="true" location="classpath:/resource-production.properties" />
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!-- <property name="maxIdle" value="${jdbc.pool.maxIdle}" /> -->
		<property name="minIdle" value="0" />
		<property name="filters" value="config" />
		<property name="connectionProperties" value="${connectionProperties}" />
		<property name="defaultAutoCommit" value="false" />
		</bean>		
	</beans>
	<!-- development环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true" location="classpath:/resource-development.properties" />
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!-- <property name="maxIdle" value="${jdbc.pool.maxIdle}" /> -->
		<property name="minIdle" value="0" />
		<property name="filters" value="stat" />
		<property name="connectionProperties" value="${connectionProperties}" />
		<property name="defaultAutoCommit" value="false" />
		
		</bean>		
	</beans>
</beans>
